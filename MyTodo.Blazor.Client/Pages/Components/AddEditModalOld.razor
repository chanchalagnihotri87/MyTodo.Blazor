
<div class="modal show"
     id="exampleModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="exampleModalLabel"
     style="display:block;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header d-md-block">
                <div class="row">
                    <div class="col-md-8"><h5 class="modal-title" id="exampleModalLabel">@(model.Id > 0 ? "Edit" : "Add") @ModalDomain</h5></div>
                    <div class="col-md-4 text-end">
                        <button type="button"
                                class="close"
                                data-dismiss="modal"
                                aria-label="Close"
                                @onclick="OnCloseClick">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
                
               
            </div>
            <EditForm OnValidSubmit="Submit" EditContext="editContext">

                <DataAnnotationsValidator />

                @if (model is not null && model.Id > 0)
                {
                    <InputNumber @bind-Value="model.Id" hidden></InputNumber>
                }

                <div class="modal-body">
                    <div class="form-group">
                        <label for="title">Title</label>
                        <InputText class="form-control" @bind-Value="model.Title"></InputText>
                        <ValidationMessage For="@(() => model.Title)" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-secondary"
                            data-dismiss="modal"
                            @onclick="OnCloseClick">
                        Close
                    </button>
                    <button class="btn btn-primary">Save changes</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public string ModalDomain { get; set; }

    [Parameter]
    public AddEditFormModel model { get; set; }

    [Parameter]
    public EventCallback OnCloseClick { get; set; }

    [Parameter]
    public EventCallback<AddEditFormModel> OnSubmit { get; set; }


    private EditContext? editContext;
    private ValidationMessageStore? messageStore;

    protected override void OnInitialized()
    {
        editContext = new EditContext(model);
        editContext.OnValidationRequested += EditContext_OnValidationRequested;
        messageStore = new ValidationMessageStore(editContext);
    }

    private void EditContext_OnValidationRequested(object? sender, ValidationRequestedEventArgs e)
    {
        messageStore?.Clear();

        if (string.IsNullOrEmpty(model.Title))
        {
            messageStore?.Add(() => model.Title, "Title is required");
        }
    }

    private async Task Submit()
    {
        await OnSubmit.InvokeAsync(model);
    }
}
